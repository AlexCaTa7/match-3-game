const GAME_BOARD = document.getElementById('gameBoard');
const BOARD_SIZE = 8;
const TILES_ICONS = [
    './game-tiles/discord.svg',
    './game-tiles/github.svg',
    './game-tiles/youtube.svg',
    './game-tiles/whatsapp.svg',
    './game-tiles/instagram.svg'
];
const SCORE = document.getElementById('score');






const BOARD_TILES = new Map();
for (let i = 0; i < BOARD_SIZE; i++) {
    const row = document.createElement('tr');
    for (let j = 0; j < BOARD_SIZE; j++) {
        const icon_index = Math.floor(Math.random() * TILES_ICONS.length)
        const icon_source = TILES_ICONS[icon_index];
        const img = document.createElement('img');
        const prison = document.createElement('td')
        img.id = 'gameTile';
        img.src = icon_source;
        img.dataset.num = icon_index;
        prison.dataset.num = icon_index;
        img.dataset.position = i + j * BOARD_SIZE;
        BOARD_TILES.set(img.dataset.position, icon_source);
        prison.appendChild(img);
        row.appendChild(prison);
    }
    GAME_BOARD.appendChild(row);
}

function CheckPairs() {
    for (let i = 0; i < BOARD_SIZE - 2; i++) {
        for (let j = 0; j < BOARD_SIZE - 2; j++) {
            if (BOARD_TILES.get(i + j) === BOARD_TILES.get(i + j + 1) === BOARD_TILES.get(i + j + 2)) {
                solvePair(i + j, 1);//row search
                CheckPairs();
            }
            if (BOARD_TILES.get(i + j) === BOARD_TILES.get(i + j + BOARD_SIZE) === BOARD_TILES.get(i + j + BOARD_SIZE)) {
                solvePair(i + j, 2);//column search;
                CheckPairs();
            }
        }
    }
}
function SolvePair(start, arg) {
    if (arg == 1) {
        let rightSame = 0;
        for (let i = start + 1; i <= BOARD_SIZE - start; i++) {
            if (BOARD_TILES.get(start) === BOARD_TILES.get(i)) {
                rightSame += 1;
            }
        }
        for (let i = start; i <= rightSame; i++) {
            document.querySelector('img[data-position=' + i + ']').src = TILES_ICONS[Math.floor(Math.random() * TILES_ICONS.length)];
        }
    } else if (arg == 2) {

        let downSame = 0;
        for (let i = start + 1; i <= BOARD_SIZE - start; i++) {
            if (BOARD_TILES.get(start) === BOARD_TILES.get(i + BOARD_SIZE)) {
                downSame += 1;
            }
        }
        for (let i = start; i <= downSame; i++) {
            document.querySelector('img[data-position=' + i + ']').src = TILES_ICONS[Math.floor(Math.random() * TILES_ICONS.length)];
        }
    } else {
        window.alert('error');
    }
}